version: 2
jobs:
  test:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run tests
          command: npm test
      - store_test_results:
          path: test-results
  deploy:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "hello-world-go"
      - GKE_PROJECT: "hello-world-go"
      - GKE_ZONE: "us-central1-a"
      - GKE_CLUSTER: "cluster-1"
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GKE_CD_SERVICE_ACCOUNT_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GKE_PROJECT}
            gcloud --quiet config set compute/zone ${GKE_ZONE}
            gcloud --quiet container clusters get-credentials ${GKE_CLUSTER}
      - setup_remote_docker
      - run:
          name: Docker build and push
          command: |
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +%Y-%m-%dT%H:%M:%SZ` \
              --build-arg BUILD_BRANCH=${CIRCLE_BRANCH} \
              -t ${PROJECT_NAME} .
            docker tag ${PROJECT_NAME}:${CIRCLE_SHA1} ${DOCKER_USERNAME}/${PROJECT_NAME}:${CIRCLE_SHA1}
            docker push ${DOCKER_USERNAME}/${PROJECT_NAME}:${CIRCLE_SHA1}
      - run:
          name: Deploy to Kubernetes
          command: |
            envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
            kubectl apply -n ${CIRCLE_BRANCH} -f ${HOME}/patched_k8s.yml
            kubectl rollout -n ${CIRCLE_BRANCH} status deployment/${PROJECT_NAME}
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - develop